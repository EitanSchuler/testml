// Generated by CoffeeScript 2.3.0
(function() {
  module.exports = TestML.StdLib = class StdLib {
    constructor(run) {
      this.run = run;
    }

    add(x, y) {
      return x + y;
    }

    block(selector) {
      return this.run.blocks[selector];
    }

    bool(any) {
      return Boolean(any);
    }

    cat(...str) {
      return str.join('');
    }

    count(list) {
      return list[0].length;
    }

    error(error = '') {
      var type;
      type = this.run.get_type(error);
      switch (false) {
        case type !== 'str':
          return ['!', error];
        case type !== 'error':
          return error[1];
        default:
          throw `Bad argument passed to Error: '${error}'`;
      }
    }

    env() {
      return [process.env];
    }

    false() {
      return false;
    }

    flat(list, depth = 9999999999) {
      return _.flattenDepth(list, depth);
    }

    head(list) {}

    join(list, separator = ' ') {
      return _.join(list[0], separator);
    }

    lines(text) {
      text = text.replace(/\n$/, '');
      return [text.split(/\n/)];
    }

    null() {
      return null;
    }

    num(any) {
      return Number(any);
    }

    pairs(list) {
      return _.chunk(list, 2);
    }

    split(string, delim = /\s+/, limit = 9999999999) {
      return [_.split(string, delim, limit)];
    }

    str(any) {
      return String(any);
    }

    text(list) {
      return [...list[0], ''].join('\n');
    }

    throw(error = '') {
      throw error;
    }

    true() {
      return true;
    }

    type(object) {
      return this.run.get_type(object);
    }

  };

}).call(this);
