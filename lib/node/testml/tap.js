// Generated by CoffeeScript 2.2.4
(function() {
  require('../testml');

  module.exports = TestML.TAP = class TAP {
    constructor() {
      this.count = 0;
      this.output = '';
      if (TestML.browser) {
        this.out = function(text) {
          return this.output += text + "\n";
        };
        this.err = function(text) {
          return this.output += text + "\n";
        };
      } else {
        this.out = function(text) {
          return process.stdout.write(String(text) + "\n");
        };
        this.err = function(text) {
          return process.stderr.write(String(text) + "\n");
        };
      }
    }

    is_eq(got, want, label) {
      this.count++;
      if (got === want) {
        return this.out(`ok ${this.count} - ${label}`);
      } else {
        this.out(`not ok ${this.count} - ${label}`);
        if (label) {
          this.err(`#   Failed test '${label}'`);
        } else {
          this.err("#   Failed test");
        }
        got = got.replace(/^/mg, '# ');
        got = got.replace(/^\#\ /, '');
        got = got.replace(/\n$/, "\n# ");
        this.err(`#          got: '${got}'`);
        want = want.replace(/^/mg, '# ');
        want = want.replace(/^\#\ /, '');
        want = want.replace(/\n$/, "\n# ");
        return this.err(`#     expected: '${want}'`);
      }
    }

    done_testing() {
      return this.out(`1..${this.count}`);
    }

  };

}).call(this);
