#!/usr/bin/env testml-boot

Diff = 1
*input.undent.compile == *output

=== Function loop
--- input
    =>
      *foo.t1 == *bar

      *foo.t2 == *baz

    === Test 1

--- output
{ "testml": "0.3.0",
  "code": [
    ["%()",[],
      ["=>",[],
        [["()",
            ["*foo","*bar"],
            ["==",
              [".",
                ["*","foo"],
                ["t1"]],
              ["*","bar"]]],
          ["()",
            ["*foo","*baz"],
            ["==",
              [".",
                ["*","foo"],
                ["t2"]],
              ["*","baz"]]]]]]],
  "data": [
    { "label": "Test 1",
      "point": {}}]}

=== Assign function to variable
--- input
    f1 = =>
      *foo.t1 == *bar

    f1()

    === Test 1

--- output
{ "testml": "0.3.0",
  "code": [
    ["=","f1",
      ["=>",[],
        [["()",
            ["*foo","*bar"],
            ["==",
              [".",
                ["*","foo"],
                ["t1"]],
              ["*","bar"]]]]]],
    ["%()",[],
      [".",
        ["f1"]]]],
  "data": [
    { "label": "Test 1",
      "point": {}}]}

=== Function with arguments
--- input
    f1 = (a, b, c)=>
      add(a, b) == c

    f1(2, 3, 5)

    === Test 1

--- output
{ "testml": "0.3.0",
  "code": [
    ["=","f1",
      ["=>",["a","b","c"],
        [["==",
            ["add",
              ["a"],
              ["b"]],
            ["c"]]]]],
    ["%()",[],
      ["f1",2,3,5]]],
  "data": [
    { "label": "Test 1",
      "point": {}}]}

# vim: ft=:
